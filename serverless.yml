service: acs-user-sync

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  stage: ${opt:stage, self:provider.stage}
  local:
    CONFIG_KEY: "acs-user-sync/local/local-acs-user-sync.json"
  dev:
    CONFIG_KEY: "acs-user-sync/dev/dev-acs-user-sync.json"
  test:
    CONFIG_KEY: "acs-user-sync/test/test-acs-user-sync"
  prod:
    CONFIG_KEY: "acs-user-sync/prod/prod-acs-user-sync.json"

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128
  timeout: 10
  stage: "dev"
  region: "us-west-2"
  environment:
    CONFIG_BUCKET: "uwit-cs-all-config"
    CONFIG_KEY: "${self:custom.${self:custom.stage}.CONFIG_KEY}"

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "logs:CreateLogGroup"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
      Resource: "arn:aws:logs:*:*:*"
    - Effect: "Allow"
      Action:
        - "kms:Decrypt"
      Resource: ${file(./resources.yml):kmsKeys}
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource: ${file(./resources.yml):s3Buckets}


plugins:
  - serverless-mocha-plugin
  - serverless-webpack
  - serverless-offline

functions:
  sync-user:
    handler: src/main/node/handler.syncUser
    events:
      - http:
          path: acs/user/{username}/sync
          method: post
          integration: lambda
          request:
            parameters: 
              paths: 
                username: true
    memorySize: 256
    timeout: 20s

package:
  exclude:
    - node_modules/aws-sdk/**
    - node_modules/aws-sdk-mock/**
    - node_modules/serverless/**
    - src/main/resources/**
